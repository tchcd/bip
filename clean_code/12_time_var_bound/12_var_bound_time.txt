
1.
Связывание во время выполнения программы

def get_model(path: str):
    model = pickle.load(open(path, "rb"))
    return model

Питон интерпретируемый язык с динамической типизацией, соответственно связывание переменных происходит
в основном во время выполнения программы (за исключением случаев, когда связывание происходит во время компиляция в байт код)
Поэтому связывание переменной model происходит в момент, когда интерпретатор доходит до этой строки
Такой вариант связывания выбран, потому что это базовый и наиболее гармоничный метод связывания в данной ситуации


2.
def avito_etl(database: Database) -> None:
    ...
    database.insert_flat(column_values=transformed_df)

Связывание при помощи тайп хинтинга.
Хотя питон язык с динамической типизацией, и связывание типов происходит во время выполнения программы,
но для статических анализаторов (mypy) тайп хинтинг может связать переменные на этапе компиляции.
Вариант выбран исходя из концепции, что указывать явный тайп хинтинг - здоровая идея, в языке где нет статистической типизации


3.
Связывание на этапе импорта

import cfg
...
mlflow.set_tracking_uri(cfg.MLFLOW_HOST)
mlflow.set_experiment(cfg.MLFLOW_NAME_EXPERIMENT)

Здесь связывание переменных MLFLOW_HOST и MLFLOW_NAME_EXPERIMENT происходит в момент импортирования модуля cfg.
Выбор убрать константы в cfg был сделан из-за того, что это конфигурационные переменные,
которые удобно хранить в отдельном модуле - config, settings